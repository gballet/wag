// Generated by internal/cmd/syscalls/generate.go

#include "textflag.h"

TEXT ·importGetCallDataSize(SB),$0-8
	LEAQ	ethereumGetCallDataSize<>(SB), AX
	MOVQ	AX, ret+0(FP)
	RET

TEXT ethereumGetCallDataSize<>(SB),NOSPLIT,$0
	MOVQ (SP), AX
	PUSHQ AX
	CALL main·GetCallDataSize+0(SB)
	POPQ AX
	RET

TEXT ·importUseGas(SB),$0-8
	LEAQ	ethereumUseGas<>(SB), AX
	MOVQ	AX, ret+0(FP)
	RET

TEXT ethereumUseGas<>(SB),NOSPLIT,$0
	MOVQ    8(SP), AX
	PUSHQ   AX
	CALL main·UseGas+0(SB)
	POPQ	AX
	XORQ	AX, AX
	RET

TEXT ·importCallDataCopy(SB),$0-8
	LEAQ	ethereumCallDataCopy<>(SB), AX
	MOVQ	AX, ret+0(FP)
	RET

TEXT ethereumCallDataCopy<>(SB),NOSPLIT,$0
    PUSHQ   AX
	MOVQ	32(SP), AX
	PUSHQ	AX
	MOVQ	32(SP), AX
	PUSHQ	AX
	MOVQ	32(SP), AX
	PUSHQ	AX

	//CALL main·CallDataCopyHelper+0(SB)

	POPQ	AX
	POPQ	AX
	POPQ	AX
	POPQ	AX
	RET

TEXT ·importFinish(SB),$0-8
	LEAQ	ethereumFinish<>(SB), AX
	MOVQ	AX, ret+0(FP)
	RET

TEXT ethereumFinish<>(SB),NOSPLIT,$0
	// Get both arguments from the stack, before it
	// is changed back to its previous value
	MOVQ	8(SP), AX
	MOVQ	16(SP), CX

	// Recover the saved value of the stack
	MOVQ    -0x20(R15), SI
	MOVQ	(SI), SP

	// Store the buffer addresses and size at
	// the location where go expects both parameters
	// to be stored, on the initial stack.
	MOVQ	CX, 0x28(SP)
	MOVQ	AX, 0x30(SP)
	RET

TEXT ·importGrowMemoryHandler(SB),$0-8
	LEAQ	growMemoryHandler<>(SB), AX
	MOVQ	AX, ret+0(FP)
	RET

TEXT growMemoryHandler<>(SB),NOSPLIT,$0-8
	//CALL main·GrowMemory+0(FP)
	RET
